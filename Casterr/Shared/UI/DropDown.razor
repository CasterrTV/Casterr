<div class="dropDownContainer" @onclick="@(e => ToggleState())">
    <label>@Placeholder</label>
    <ul class="@string.Join(" ", dropDownClasses)">
        @foreach (var item in @Items)
        {
            <li @onclick="@(e => SwitchItems(@item))">@item</li>
        }
    </ul>
</div>

@code {
    [Parameter]
    public string[] Items { get; set; }

    [Parameter]
    public EventCallback<string> OnSelectedChanged { get; set; }

    private List<string> dropDownClasses = new List<string>();
    public string Placeholder;

    protected override void OnInitialized()
    {
        // Make placeholder first item in items array
        Placeholder = Items.First();

        // Remove first item from items array since it the placeholder now
        Items = Items.Skip(1).ToArray();

        //SwitchItems(Placeholder);
    }

    private void ToggleState()
    {
        if (dropDownClasses.Contains("opened"))
        {
            dropDownClasses.Remove("opened");
        }
        else
        {
            dropDownClasses.Add("opened");
        }
    }

    public void SwitchItems(string itemClicked)
    {
        // Put placeholder in place of item clicked in Items array
        Items = Items.Select(s => s.Replace(itemClicked, Placeholder)).ToArray();

        // Update placeholder on dropdown with item clicked
        Placeholder = itemClicked;

        OnSelectedChanged.InvokeAsync(Placeholder);
    }
}

@page "/"

@using Casterr.RecorderLib;
@using Casterr.SettingsLib;
@using Casterr.RecorderLib.FFmpeg;

@inject NavigationManager Navigation
@inject Recorder rc
@inject SettingsManager sm
@inject DeviceManager dm

@*@inject StatusService statusService
<button @onclick="@(e => statusService.ChangeStatus(0))">Zero - Index</button>*@

<input name="args" @bind="@args" style="width:1000px;" />
<br />
<button @onclick="@(e => rc.Start())">Start Recording</button>
<button @onclick="@(e => rc.Stop())">Stop Recording</button>
<br /><br />
<button @onclick="@(e => dm.GetDevices())">Get Devices</button>

@*<button @onclick="@(e => UpdateSP())">Update SP</button>
<button @onclick="@(e => UpdateSettings())">Update Settings</button>
<input name="sp" @bind="@sp" style="width:500px;" />
<br /><br />*@

<button @onclick="@(e => FindFFmpeg.GetPath())">TEST</button>

@code {
  //string sp;

  string args = "(disabled) -f gdigrab -framerate 30 -video_size 1920x1080 -i desktop";

  protected override void OnInitialized()
  {
    //Navigation.NavigateTo("/recordings", true);
  }

  private void UpdateSP()
  {
    //GeneralSettings gs = new GeneralSettings();
    //RecordingSettings rs = new RecordingSettings();

    //sm.GetSettings(gs);

    //Console.WriteLine(gs.StartupPage);

    //gs.StartupPage = sp;

    //Console.WriteLine(gs.StartupPage);
  }

  private void UpdateSettings()
  {
    //GeneralSettings gs = new GeneralSettings();

    //Console.WriteLine(gs.StartupPage);

    //gs.StartupPage = sp;
    //sm.UpdateSettingsFile(gs);

    //Console.WriteLine(gs.StartupPage);
  }
}